
ph:     file format elf32-i386


Disassembly of section .interp:

00000194 <.interp>:
 194:	2f                   	das    
 195:	6c                   	ins    BYTE PTR es:[edi],dx
 196:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 19d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 1a4:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

000001a8 <.note.ABI-tag>:
 1a8:	04 00                	add    al,0x0
 1aa:	00 00                	add    BYTE PTR [eax],al
 1ac:	10 00                	adc    BYTE PTR [eax],al
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	01 00                	add    DWORD PTR [eax],eax
 1b2:	00 00                	add    BYTE PTR [eax],al
 1b4:	47                   	inc    edi
 1b5:	4e                   	dec    esi
 1b6:	55                   	push   ebp
 1b7:	00 00                	add    BYTE PTR [eax],al
 1b9:	00 00                	add    BYTE PTR [eax],al
 1bb:	00 03                	add    BYTE PTR [ebx],al
 1bd:	00 00                	add    BYTE PTR [eax],al
 1bf:	00 02                	add    BYTE PTR [edx],al
 1c1:	00 00                	add    BYTE PTR [eax],al
 1c3:	00 00                	add    BYTE PTR [eax],al
 1c5:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

000001c8 <.note.gnu.build-id>:
 1c8:	04 00                	add    al,0x0
 1ca:	00 00                	add    BYTE PTR [eax],al
 1cc:	14 00                	adc    al,0x0
 1ce:	00 00                	add    BYTE PTR [eax],al
 1d0:	03 00                	add    eax,DWORD PTR [eax]
 1d2:	00 00                	add    BYTE PTR [eax],al
 1d4:	47                   	inc    edi
 1d5:	4e                   	dec    esi
 1d6:	55                   	push   ebp
 1d7:	00 4f 38             	add    BYTE PTR [edi+0x38],cl
 1da:	41                   	inc    ecx
 1db:	fa                   	cli    
 1dc:	ea 61 28 c9 82 20 31 	jmp    0x3120:0x82c92861
 1e3:	11 b1 9d 40 c3 b5    	adc    DWORD PTR [ecx-0x4a3cbf63],esi
 1e9:	ff                   	(bad)  
 1ea:	e8                   	.byte 0xe8
 1eb:	8f                   	.byte 0x8f

Disassembly of section .gnu.hash:

000001ec <.gnu.hash>:
 1ec:	02 00                	add    al,BYTE PTR [eax]
 1ee:	00 00                	add    BYTE PTR [eax],al
 1f0:	0f 00 00             	sldt   WORD PTR [eax]
 1f3:	00 01                	add    BYTE PTR [ecx],al
 1f5:	00 00                	add    BYTE PTR [eax],al
 1f7:	00 05 00 00 00 00    	add    BYTE PTR ds:0x0,al
 1fd:	20 00                	and    BYTE PTR [eax],al
 1ff:	20 00                	and    BYTE PTR [eax],al
 201:	00 00                	add    BYTE PTR [eax],al
 203:	00 0f                	add    BYTE PTR [edi],cl
 205:	00 00                	add    BYTE PTR [eax],al
 207:	00                   	.byte 0x0
 208:	ad                   	lods   eax,DWORD PTR ds:[esi]
 209:	4b                   	dec    ebx
 20a:	e3 c0                	jecxz  1cc <_init-0xe34>

Disassembly of section .dynsym:

0000020c <.dynsym>:
	...
 21c:	5f                   	pop    edi
	...
 225:	00 00                	add    BYTE PTR [eax],al
 227:	00 12                	add    BYTE PTR [edx],dl
 229:	00 00                	add    BYTE PTR [eax],al
 22b:	00 a7 00 00 00 00    	add    BYTE PTR [edi+0x0],ah
 231:	00 00                	add    BYTE PTR [eax],al
 233:	00 00                	add    BYTE PTR [eax],al
 235:	00 00                	add    BYTE PTR [eax],al
 237:	00 20                	add    BYTE PTR [eax],ah
 239:	00 00                	add    BYTE PTR [eax],al
 23b:	00 20                	add    BYTE PTR [eax],ah
	...
 245:	00 00                	add    BYTE PTR [eax],al
 247:	00 12                	add    BYTE PTR [edx],dl
 249:	00 00                	add    BYTE PTR [eax],al
 24b:	00 78 00             	add    BYTE PTR [eax+0x0],bh
	...
 256:	00 00                	add    BYTE PTR [eax],al
 258:	12 00                	adc    al,BYTE PTR [eax]
 25a:	00 00                	add    BYTE PTR [eax],al
 25c:	50                   	push   eax
	...
 265:	00 00                	add    BYTE PTR [eax],al
 267:	00 22                	add    BYTE PTR [edx],ah
 269:	00 00                	add    BYTE PTR [eax],al
 26b:	00 3b                	add    BYTE PTR [ebx],bh
	...
 275:	00 00                	add    BYTE PTR [eax],al
 277:	00 12                	add    BYTE PTR [edx],dl
 279:	00 00                	add    BYTE PTR [eax],al
 27b:	00 c3                	add    bl,al
	...
 285:	00 00                	add    BYTE PTR [eax],al
 287:	00 20                	add    BYTE PTR [eax],ah
 289:	00 00                	add    BYTE PTR [eax],al
 28b:	00 34 00             	add    BYTE PTR [eax+eax*1],dh
	...
 296:	00 00                	add    BYTE PTR [eax],al
 298:	12 00                	adc    al,BYTE PTR [eax]
 29a:	00 00                	add    BYTE PTR [eax],al
 29c:	66 00 00             	data16 add BYTE PTR [eax],al
	...
 2a7:	00 12                	add    BYTE PTR [edx],dl
 2a9:	00 00                	add    BYTE PTR [eax],al
 2ab:	00 1a                	add    BYTE PTR [edx],bl
	...
 2b5:	00 00                	add    BYTE PTR [eax],al
 2b7:	00 12                	add    BYTE PTR [edx],dl
 2b9:	00 00                	add    BYTE PTR [eax],al
 2bb:	00 27                	add    BYTE PTR [edi],ah
	...
 2c5:	00 00                	add    BYTE PTR [eax],al
 2c7:	00 12                	add    BYTE PTR [edx],dl
 2c9:	00 00                	add    BYTE PTR [eax],al
 2cb:	00 d2                	add    dl,dl
	...
 2d5:	00 00                	add    BYTE PTR [eax],al
 2d7:	00 20                	add    BYTE PTR [eax],ah
 2d9:	00 00                	add    BYTE PTR [eax],al
 2db:	00 42 00             	add    BYTE PTR [edx+0x0],al
	...
 2e6:	00 00                	add    BYTE PTR [eax],al
 2e8:	12 00                	adc    al,BYTE PTR [eax]
 2ea:	00 00                	add    BYTE PTR [eax],al
 2ec:	2d 00 00 00 00       	sub    eax,0x0
 2f1:	00 00                	add    BYTE PTR [eax],al
 2f3:	00 00                	add    BYTE PTR [eax],al
 2f5:	00 00                	add    BYTE PTR [eax],al
 2f7:	00 12                	add    BYTE PTR [edx],dl
 2f9:	00 00                	add    BYTE PTR [eax],al
 2fb:	00 0b                	add    BYTE PTR [ebx],cl
 2fd:	00 00                	add    BYTE PTR [eax],al
 2ff:	00 04 20             	add    BYTE PTR [eax+eiz*1],al
 302:	00 00                	add    BYTE PTR [eax],al
 304:	04 00                	add    al,0x0
 306:	00 00                	add    BYTE PTR [eax],al
 308:	11 00                	adc    DWORD PTR [eax],eax
 30a:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

0000030c <.dynstr>:
 30c:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 310:	63 2e                	arpl   WORD PTR [esi],bp
 312:	73 6f                	jae    383 <_init-0xc7d>
 314:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 319:	4f                   	dec    edi
 31a:	5f                   	pop    edi
 31b:	73 74                	jae    391 <_init-0xc6f>
 31d:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 324:	64 
 325:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
 328:	70 65                	jo     38f <_init-0xc71>
 32a:	6e                   	outs   dx,BYTE PTR ds:[esi]
 32b:	00 70 72             	add    BYTE PTR [eax+0x72],dh
 32e:	69 6e 74 66 00 66 67 	imul   ebp,DWORD PTR [esi+0x74],0x67660066
 335:	65 74 63             	gs je  39b <_init-0xc65>
 338:	00 63 61             	add    BYTE PTR [ebx+0x61],ah
 33b:	6c                   	ins    BYTE PTR es:[edi],dx
 33c:	6c                   	ins    BYTE PTR es:[edi],dx
 33d:	6f                   	outs   dx,DWORD PTR ds:[esi]
 33e:	63 00                	arpl   WORD PTR [eax],ax
 340:	73 74                	jae    3b6 <_init-0xc4a>
 342:	72 6c                	jb     3b0 <_init-0xc50>
 344:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 346:	00 6d 61             	add    BYTE PTR [ebp+0x61],ch
 349:	6c                   	ins    BYTE PTR es:[edi],dx
 34a:	6c                   	ins    BYTE PTR es:[edi],dx
 34b:	6f                   	outs   dx,DWORD PTR ds:[esi]
 34c:	63 00                	arpl   WORD PTR [eax],ax
 34e:	5f                   	pop    edi
 34f:	5f                   	pop    edi
 350:	63 74 79 70          	arpl   WORD PTR [ecx+edi*2+0x70],si
 354:	65 5f                	gs pop edi
 356:	62 5f 6c             	bound  ebx,QWORD PTR [edi+0x6c]
 359:	6f                   	outs   dx,DWORD PTR ds:[esi]
 35a:	63 00                	arpl   WORD PTR [eax],ax
 35c:	5f                   	pop    edi
 35d:	5f                   	pop    edi
 35e:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 361:	5f                   	pop    edi
 362:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 368:	7a 65                	jp     3cf <_init-0xc31>
 36a:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 36d:	72 63                	jb     3d2 <_init-0xc2e>
 36f:	6d                   	ins    DWORD PTR es:[edi],dx
 370:	70 00                	jo     372 <_init-0xc8e>
 372:	5f                   	pop    edi
 373:	5f                   	pop    edi
 374:	6c                   	ins    BYTE PTR es:[edi],dx
 375:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 37c:	72 74                	jb     3f2 <_init-0xc0e>
 37e:	5f                   	pop    edi
 37f:	6d                   	ins    DWORD PTR es:[edi],dx
 380:	61                   	popa   
 381:	69 6e 00 66 72 65 65 	imul   ebp,DWORD PTR [esi+0x0],0x65657266
 388:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 38b:	49                   	dec    ecx
 38c:	42                   	inc    edx
 38d:	43                   	inc    ebx
 38e:	5f                   	pop    edi
 38f:	32 2e                	xor    ch,BYTE PTR [esi]
 391:	33 00                	xor    eax,DWORD PTR [eax]
 393:	47                   	inc    edi
 394:	4c                   	dec    esp
 395:	49                   	dec    ecx
 396:	42                   	inc    edx
 397:	43                   	inc    ebx
 398:	5f                   	pop    edi
 399:	32 2e                	xor    ch,BYTE PTR [esi]
 39b:	31 00                	xor    DWORD PTR [eax],eax
 39d:	47                   	inc    edi
 39e:	4c                   	dec    esp
 39f:	49                   	dec    ecx
 3a0:	42                   	inc    edx
 3a1:	43                   	inc    ebx
 3a2:	5f                   	pop    edi
 3a3:	32 2e                	xor    ch,BYTE PTR [esi]
 3a5:	31 2e                	xor    DWORD PTR [esi],ebp
 3a7:	33 00                	xor    eax,DWORD PTR [eax]
 3a9:	47                   	inc    edi
 3aa:	4c                   	dec    esp
 3ab:	49                   	dec    ecx
 3ac:	42                   	inc    edx
 3ad:	43                   	inc    ebx
 3ae:	5f                   	pop    edi
 3af:	32 2e                	xor    ch,BYTE PTR [esi]
 3b1:	30 00                	xor    BYTE PTR [eax],al
 3b3:	5f                   	pop    edi
 3b4:	49                   	dec    ecx
 3b5:	54                   	push   esp
 3b6:	4d                   	dec    ebp
 3b7:	5f                   	pop    edi
 3b8:	64 65 72 65          	fs gs jb 421 <_init-0xbdf>
 3bc:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 3c3:	4d 
 3c4:	43                   	inc    ebx
 3c5:	6c                   	ins    BYTE PTR es:[edi],dx
 3c6:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3c7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3c8:	65 54                	gs push esp
 3ca:	61                   	popa   
 3cb:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 3cf:	5f                   	pop    edi
 3d0:	5f                   	pop    edi
 3d1:	67 6d                	ins    DWORD PTR es:[di],dx
 3d3:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3d4:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3d5:	5f                   	pop    edi
 3d6:	73 74                	jae    44c <_init-0xbb4>
 3d8:	61                   	popa   
 3d9:	72 74                	jb     44f <_init-0xbb1>
 3db:	5f                   	pop    edi
 3dc:	5f                   	pop    edi
 3dd:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 3e0:	54                   	push   esp
 3e1:	4d                   	dec    ebp
 3e2:	5f                   	pop    edi
 3e3:	72 65                	jb     44a <_init-0xbb6>
 3e5:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 3ec:	4d 
 3ed:	43                   	inc    ebx
 3ee:	6c                   	ins    BYTE PTR es:[edi],dx
 3ef:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3f0:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3f1:	65 54                	gs push esp
 3f3:	61                   	popa   
 3f4:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]

Disassembly of section .gnu.version:

000003f8 <.gnu.version>:
 3f8:	00 00                	add    BYTE PTR [eax],al
 3fa:	02 00                	add    al,BYTE PTR [eax]
 3fc:	00 00                	add    BYTE PTR [eax],al
 3fe:	02 00                	add    al,BYTE PTR [eax]
 400:	02 00                	add    al,BYTE PTR [eax]
 402:	03 00                	add    eax,DWORD PTR [eax]
 404:	02 00                	add    al,BYTE PTR [eax]
 406:	00 00                	add    BYTE PTR [eax],al
 408:	02 00                	add    al,BYTE PTR [eax]
 40a:	02 00                	add    al,BYTE PTR [eax]
 40c:	04 00                	add    al,0x0
 40e:	02 00                	add    al,BYTE PTR [eax]
 410:	00 00                	add    BYTE PTR [eax],al
 412:	05 00 02 00 01       	add    eax,0x1000200
	...

Disassembly of section .gnu.version_r:

00000418 <.gnu.version_r>:
 418:	01 00                	add    DWORD PTR [eax],eax
 41a:	04 00                	add    al,0x0
 41c:	01 00                	add    DWORD PTR [eax],eax
 41e:	00 00                	add    BYTE PTR [eax],al
 420:	10 00                	adc    BYTE PTR [eax],al
 422:	00 00                	add    BYTE PTR [eax],al
 424:	00 00                	add    BYTE PTR [eax],al
 426:	00 00                	add    BYTE PTR [eax],al
 428:	13 69 69             	adc    ebp,DWORD PTR [ecx+0x69]
 42b:	0d 00 00 05 00       	or     eax,0x50000
 430:	7d 00                	jge    432 <_init-0xbce>
 432:	00 00                	add    BYTE PTR [eax],al
 434:	10 00                	adc    BYTE PTR [eax],al
 436:	00 00                	add    BYTE PTR [eax],al
 438:	11 69 69             	adc    DWORD PTR [ecx+0x69],ebp
 43b:	0d 00 00 04 00       	or     eax,0x40000
 440:	87 00                	xchg   DWORD PTR [eax],eax
 442:	00 00                	add    BYTE PTR [eax],al
 444:	10 00                	adc    BYTE PTR [eax],al
 446:	00 00                	add    BYTE PTR [eax],al
 448:	73 1f                	jae    469 <_init-0xb97>
 44a:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [ecx],0x30000
 450:	91                   	xchg   ecx,eax
 451:	00 00                	add    BYTE PTR [eax],al
 453:	00 10                	add    BYTE PTR [eax],dl
 455:	00 00                	add    BYTE PTR [eax],al
 457:	00 10                	add    BYTE PTR [eax],dl
 459:	69 69 0d 00 00 02 00 	imul   ebp,DWORD PTR [ecx+0xd],0x20000
 460:	9d                   	popf   
 461:	00 00                	add    BYTE PTR [eax],al
 463:	00 00                	add    BYTE PTR [eax],al
 465:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

00000468 <.rel.dyn>:
 468:	f4                   	hlt    
 469:	3e 00 00             	add    BYTE PTR ds:[eax],al
 46c:	08 00                	or     BYTE PTR [eax],al
 46e:	00 00                	add    BYTE PTR [eax],al
 470:	f8                   	clc    
 471:	3e 00 00             	add    BYTE PTR ds:[eax],al
 474:	08 00                	or     BYTE PTR [eax],al
 476:	00 00                	add    BYTE PTR [eax],al
 478:	f8                   	clc    
 479:	3f                   	aas    
 47a:	00 00                	add    BYTE PTR [eax],al
 47c:	08 00                	or     BYTE PTR [eax],al
 47e:	00 00                	add    BYTE PTR [eax],al
 480:	38 40 00             	cmp    BYTE PTR [eax+0x0],al
 483:	00 08                	add    BYTE PTR [eax],cl
 485:	00 00                	add    BYTE PTR [eax],al
 487:	00 3c 40             	add    BYTE PTR [eax+eax*2],bh
 48a:	00 00                	add    BYTE PTR [eax],al
 48c:	08 00                	or     BYTE PTR [eax],al
 48e:	00 00                	add    BYTE PTR [eax],al
 490:	40                   	inc    eax
 491:	40                   	inc    eax
 492:	00 00                	add    BYTE PTR [eax],al
 494:	08 00                	or     BYTE PTR [eax],al
 496:	00 00                	add    BYTE PTR [eax],al
 498:	44                   	inc    esp
 499:	40                   	inc    eax
 49a:	00 00                	add    BYTE PTR [eax],al
 49c:	08 00                	or     BYTE PTR [eax],al
 49e:	00 00                	add    BYTE PTR [eax],al
 4a0:	48                   	dec    eax
 4a1:	40                   	inc    eax
 4a2:	00 00                	add    BYTE PTR [eax],al
 4a4:	08 00                	or     BYTE PTR [eax],al
 4a6:	00 00                	add    BYTE PTR [eax],al
 4a8:	4c                   	dec    esp
 4a9:	40                   	inc    eax
 4aa:	00 00                	add    BYTE PTR [eax],al
 4ac:	08 00                	or     BYTE PTR [eax],al
 4ae:	00 00                	add    BYTE PTR [eax],al
 4b0:	ec                   	in     al,dx
 4b1:	3f                   	aas    
 4b2:	00 00                	add    BYTE PTR [eax],al
 4b4:	06                   	push   es
 4b5:	02 00                	add    al,BYTE PTR [eax]
 4b7:	00 f0                	add    al,dh
 4b9:	3f                   	aas    
 4ba:	00 00                	add    BYTE PTR [eax],al
 4bc:	06                   	push   es
 4bd:	05 00 00 f4 3f       	add    eax,0x3ff40000
 4c2:	00 00                	add    BYTE PTR [eax],al
 4c4:	06                   	push   es
 4c5:	07                   	pop    es
 4c6:	00 00                	add    BYTE PTR [eax],al
 4c8:	fc                   	cld    
 4c9:	3f                   	aas    
 4ca:	00 00                	add    BYTE PTR [eax],al
 4cc:	06                   	push   es
 4cd:	0c 00                	or     al,0x0
	...

Disassembly of section .rel.plt:

000004d0 <.rel.plt>:
 4d0:	0c 40                	or     al,0x40
 4d2:	00 00                	add    BYTE PTR [eax],al
 4d4:	07                   	pop    es
 4d5:	01 00                	add    DWORD PTR [eax],eax
 4d7:	00 10                	add    BYTE PTR [eax],dl
 4d9:	40                   	inc    eax
 4da:	00 00                	add    BYTE PTR [eax],al
 4dc:	07                   	pop    es
 4dd:	03 00                	add    eax,DWORD PTR [eax]
 4df:	00 14 40             	add    BYTE PTR [eax+eax*2],dl
 4e2:	00 00                	add    BYTE PTR [eax],al
 4e4:	07                   	pop    es
 4e5:	04 00                	add    al,0x0
 4e7:	00 18                	add    BYTE PTR [eax],bl
 4e9:	40                   	inc    eax
 4ea:	00 00                	add    BYTE PTR [eax],al
 4ec:	07                   	pop    es
 4ed:	06                   	push   es
 4ee:	00 00                	add    BYTE PTR [eax],al
 4f0:	1c 40                	sbb    al,0x40
 4f2:	00 00                	add    BYTE PTR [eax],al
 4f4:	07                   	pop    es
 4f5:	08 00                	or     BYTE PTR [eax],al
 4f7:	00 20                	add    BYTE PTR [eax],ah
 4f9:	40                   	inc    eax
 4fa:	00 00                	add    BYTE PTR [eax],al
 4fc:	07                   	pop    es
 4fd:	09 00                	or     DWORD PTR [eax],eax
 4ff:	00 24 40             	add    BYTE PTR [eax+eax*2],ah
 502:	00 00                	add    BYTE PTR [eax],al
 504:	07                   	pop    es
 505:	0a 00                	or     al,BYTE PTR [eax]
 507:	00 28                	add    BYTE PTR [eax],ch
 509:	40                   	inc    eax
 50a:	00 00                	add    BYTE PTR [eax],al
 50c:	07                   	pop    es
 50d:	0b 00                	or     eax,DWORD PTR [eax]
 50f:	00 2c 40             	add    BYTE PTR [eax+eax*2],ch
 512:	00 00                	add    BYTE PTR [eax],al
 514:	07                   	pop    es
 515:	0d 00 00 30 40       	or     eax,0x40300000
 51a:	00 00                	add    BYTE PTR [eax],al
 51c:	07                   	pop    es
 51d:	0e                   	push   cs
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   ebx
    1001:	83 ec 08             	sub    esp,0x8
    1004:	e8 17 01 00 00       	call   1120 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    ebx,0x2ff7
    100f:	8b 83 f4 ff ff ff    	mov    eax,DWORD PTR [ebx-0xc]
    1015:	85 c0                	test   eax,eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   eax
    101b:	83 c4 08             	add    esp,0x8
    101e:	5b                   	pop    ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <strcmp@plt-0x10>:
    1020:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
    1026:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
    102c:	00 00                	add    BYTE PTR [eax],al
	...

00001030 <strcmp@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

00001040 <printf@plt>:
    1040:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
    1046:	68 08 00 00 00       	push   0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

00001050 <free@plt>:
    1050:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
    1056:	68 10 00 00 00       	push   0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

00001060 <malloc@plt>:
    1060:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
    1066:	68 18 00 00 00       	push   0x18
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

00001070 <strlen@plt>:
    1070:	ff a3 1c 00 00 00    	jmp    DWORD PTR [ebx+0x1c]
    1076:	68 20 00 00 00       	push   0x20
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

00001080 <__libc_start_main@plt>:
    1080:	ff a3 20 00 00 00    	jmp    DWORD PTR [ebx+0x20]
    1086:	68 28 00 00 00       	push   0x28
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

00001090 <fopen@plt>:
    1090:	ff a3 24 00 00 00    	jmp    DWORD PTR [ebx+0x24]
    1096:	68 30 00 00 00       	push   0x30
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

000010a0 <fgetc@plt>:
    10a0:	ff a3 28 00 00 00    	jmp    DWORD PTR [ebx+0x28]
    10a6:	68 38 00 00 00       	push   0x38
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

000010b0 <__ctype_b_loc@plt>:
    10b0:	ff a3 2c 00 00 00    	jmp    DWORD PTR [ebx+0x2c]
    10b6:	68 40 00 00 00       	push   0x40
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

000010c0 <calloc@plt>:
    10c0:	ff a3 30 00 00 00    	jmp    DWORD PTR [ebx+0x30]
    10c6:	68 48 00 00 00       	push   0x48
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

000010d0 <.plt.got>:
    10d0:	ff a3 f0 ff ff ff    	jmp    DWORD PTR [ebx-0x10]
    10d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

000010e0 <_start>:
    10e0:	31 ed                	xor    ebp,ebp
    10e2:	5e                   	pop    esi
    10e3:	89 e1                	mov    ecx,esp
    10e5:	83 e4 f0             	and    esp,0xfffffff0
    10e8:	50                   	push   eax
    10e9:	54                   	push   esp
    10ea:	52                   	push   edx
    10eb:	e8 22 00 00 00       	call   1112 <_start+0x32>
    10f0:	81 c3 10 2f 00 00    	add    ebx,0x2f10
    10f6:	8d 83 30 d7 ff ff    	lea    eax,[ebx-0x28d0]
    10fc:	50                   	push   eax
    10fd:	8d 83 d0 d6 ff ff    	lea    eax,[ebx-0x2930]
    1103:	50                   	push   eax
    1104:	51                   	push   ecx
    1105:	56                   	push   esi
    1106:	ff b3 f8 ff ff ff    	push   DWORD PTR [ebx-0x8]
    110c:	e8 6f ff ff ff       	call   1080 <__libc_start_main@plt>
    1111:	f4                   	hlt    
    1112:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1115:	c3                   	ret    
    1116:	66 90                	xchg   ax,ax
    1118:	66 90                	xchg   ax,ax
    111a:	66 90                	xchg   ax,ax
    111c:	66 90                	xchg   ax,ax
    111e:	66 90                	xchg   ax,ax

00001120 <__x86.get_pc_thunk.bx>:
    1120:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1123:	c3                   	ret    
    1124:	66 90                	xchg   ax,ax
    1126:	66 90                	xchg   ax,ax
    1128:	66 90                	xchg   ax,ax
    112a:	66 90                	xchg   ax,ax
    112c:	66 90                	xchg   ax,ax
    112e:	66 90                	xchg   ax,ax

00001130 <deregister_tm_clones>:
    1130:	e8 e0 00 00 00       	call   1215 <__x86.get_pc_thunk.dx>
    1135:	81 c2 cb 2e 00 00    	add    edx,0x2ecb
    113b:	8d 8a 50 00 00 00    	lea    ecx,[edx+0x50]
    1141:	8d 82 50 00 00 00    	lea    eax,[edx+0x50]
    1147:	39 c8                	cmp    eax,ecx
    1149:	74 1d                	je     1168 <deregister_tm_clones+0x38>
    114b:	8b 82 ec ff ff ff    	mov    eax,DWORD PTR [edx-0x14]
    1151:	85 c0                	test   eax,eax
    1153:	74 13                	je     1168 <deregister_tm_clones+0x38>
    1155:	55                   	push   ebp
    1156:	89 e5                	mov    ebp,esp
    1158:	83 ec 14             	sub    esp,0x14
    115b:	51                   	push   ecx
    115c:	ff d0                	call   eax
    115e:	83 c4 10             	add    esp,0x10
    1161:	c9                   	leave  
    1162:	c3                   	ret    
    1163:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    1167:	90                   	nop
    1168:	c3                   	ret    
    1169:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00001170 <register_tm_clones>:
    1170:	e8 a0 00 00 00       	call   1215 <__x86.get_pc_thunk.dx>
    1175:	81 c2 8b 2e 00 00    	add    edx,0x2e8b
    117b:	55                   	push   ebp
    117c:	89 e5                	mov    ebp,esp
    117e:	53                   	push   ebx
    117f:	8d 8a 50 00 00 00    	lea    ecx,[edx+0x50]
    1185:	8d 82 50 00 00 00    	lea    eax,[edx+0x50]
    118b:	83 ec 04             	sub    esp,0x4
    118e:	29 c8                	sub    eax,ecx
    1190:	c1 f8 02             	sar    eax,0x2
    1193:	89 c3                	mov    ebx,eax
    1195:	c1 eb 1f             	shr    ebx,0x1f
    1198:	01 d8                	add    eax,ebx
    119a:	d1 f8                	sar    eax,1
    119c:	74 14                	je     11b2 <register_tm_clones+0x42>
    119e:	8b 92 fc ff ff ff    	mov    edx,DWORD PTR [edx-0x4]
    11a4:	85 d2                	test   edx,edx
    11a6:	74 0a                	je     11b2 <register_tm_clones+0x42>
    11a8:	83 ec 08             	sub    esp,0x8
    11ab:	50                   	push   eax
    11ac:	51                   	push   ecx
    11ad:	ff d2                	call   edx
    11af:	83 c4 10             	add    esp,0x10
    11b2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    11b5:	c9                   	leave  
    11b6:	c3                   	ret    
    11b7:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    11be:	66 90                	xchg   ax,ax

000011c0 <__do_global_dtors_aux>:
    11c0:	55                   	push   ebp
    11c1:	89 e5                	mov    ebp,esp
    11c3:	53                   	push   ebx
    11c4:	e8 57 ff ff ff       	call   1120 <__x86.get_pc_thunk.bx>
    11c9:	81 c3 37 2e 00 00    	add    ebx,0x2e37
    11cf:	83 ec 04             	sub    esp,0x4
    11d2:	80 bb 50 00 00 00 00 	cmp    BYTE PTR [ebx+0x50],0x0
    11d9:	75 27                	jne    1202 <__do_global_dtors_aux+0x42>
    11db:	8b 83 f0 ff ff ff    	mov    eax,DWORD PTR [ebx-0x10]
    11e1:	85 c0                	test   eax,eax
    11e3:	74 11                	je     11f6 <__do_global_dtors_aux+0x36>
    11e5:	83 ec 0c             	sub    esp,0xc
    11e8:	ff b3 38 00 00 00    	push   DWORD PTR [ebx+0x38]
    11ee:	e8 dd fe ff ff       	call   10d0 <calloc@plt+0x10>
    11f3:	83 c4 10             	add    esp,0x10
    11f6:	e8 35 ff ff ff       	call   1130 <deregister_tm_clones>
    11fb:	c6 83 50 00 00 00 01 	mov    BYTE PTR [ebx+0x50],0x1
    1202:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1205:	c9                   	leave  
    1206:	c3                   	ret    
    1207:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    120e:	66 90                	xchg   ax,ax

00001210 <frame_dummy>:
    1210:	e9 5b ff ff ff       	jmp    1170 <register_tm_clones>

00001215 <__x86.get_pc_thunk.dx>:
    1215:	8b 14 24             	mov    edx,DWORD PTR [esp]
    1218:	c3                   	ret    

00001219 <run>:
    1219:	55                   	push   ebp
    121a:	89 e5                	mov    ebp,esp
    121c:	53                   	push   ebx
    121d:	83 ec 34             	sub    esp,0x34
    1220:	e8 fb fe ff ff       	call   1120 <__x86.get_pc_thunk.bx>
    1225:	81 c3 db 2d 00 00    	add    ebx,0x2ddb
    122b:	c7 45 f4 ff ff ff ff 	mov    DWORD PTR [ebp-0xc],0xffffffff
    1232:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
    1239:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
    1240:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
    1247:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
    124e:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
    1255:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
    125c:	83 ec 08             	sub    esp,0x8
    125f:	6a 01                	push   0x1
    1261:	68 e8 03 00 00       	push   0x3e8
    1266:	e8 55 fe ff ff       	call   10c0 <calloc@plt>
    126b:	83 c4 10             	add    esp,0x10
    126e:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
    1271:	83 ec 08             	sub    esp,0x8
    1274:	6a 01                	push   0x1
    1276:	68 e8 03 00 00       	push   0x3e8
    127b:	e8 40 fe ff ff       	call   10c0 <calloc@plt>
    1280:	83 c4 10             	add    esp,0x10
    1283:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
    1286:	e9 ec 01 00 00       	jmp    1477 <.L3+0x2f>
    128b:	0f be 45 d3          	movsx  eax,BYTE PTR [ebp-0x2d]
    128f:	83 e8 2b             	sub    eax,0x2b
    1292:	83 f8 32             	cmp    eax,0x32
    1295:	0f 87 ad 01 00 00    	ja     1448 <.L3>
    129b:	c1 e0 02             	shl    eax,0x2
    129e:	8b 84 18 cc e0 ff ff 	mov    eax,DWORD PTR [eax+ebx*1-0x1f34]
    12a5:	01 d8                	add    eax,ebx
    12a7:	ff e0                	jmp    eax

000012a9 <.L9>: +22
    12a9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    12ac:	8d 48 16             	lea    ecx,[eax+0x16]
    12af:	ba d3 4d 62 10       	mov    edx,0x10624dd3
    12b4:	89 c8                	mov    eax,ecx
    12b6:	f7 ea                	imul   edx
    12b8:	c1 fa 06             	sar    edx,0x6
    12bb:	89 c8                	mov    eax,ecx
    12bd:	c1 f8 1f             	sar    eax,0x1f
    12c0:	29 c2                	sub    edx,eax
    12c2:	89 d0                	mov    eax,edx
    12c4:	69 c0 e8 03 00 00    	imul   eax,eax,0x3e8
    12ca:	29 c1                	sub    ecx,eax
    12cc:	89 c8                	mov    eax,ecx
    12ce:	8d 88 e8 03 00 00    	lea    ecx,[eax+0x3e8]
    12d4:	ba d3 4d 62 10       	mov    edx,0x10624dd3
    12d9:	89 c8                	mov    eax,ecx
    12db:	f7 ea                	imul   edx
    12dd:	c1 fa 06             	sar    edx,0x6
    12e0:	89 c8                	mov    eax,ecx
    12e2:	c1 f8 1f             	sar    eax,0x1f
    12e5:	29 c2                	sub    edx,eax
    12e7:	89 d0                	mov    eax,edx
    12e9:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    12ec:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    12ef:	69 c0 e8 03 00 00    	imul   eax,eax,0x3e8
    12f5:	29 c1                	sub    ecx,eax
    12f7:	89 c8                	mov    eax,ecx
    12f9:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    12fc:	e9 65 01 00 00       	jmp    1466 <.L3+0x1e>

00001301 <.L7>: -2
    1301:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1304:	8d 48 fe             	lea    ecx,[eax-0x2]
    1307:	ba d3 4d 62 10       	mov    edx,0x10624dd3
    130c:	89 c8                	mov    eax,ecx
    130e:	f7 ea                	imul   edx
    1310:	c1 fa 06             	sar    edx,0x6
    1313:	89 c8                	mov    eax,ecx
    1315:	c1 f8 1f             	sar    eax,0x1f
    1318:	29 c2                	sub    edx,eax
    131a:	89 d0                	mov    eax,edx
    131c:	69 c0 e8 03 00 00    	imul   eax,eax,0x3e8
    1322:	29 c1                	sub    ecx,eax
    1324:	89 c8                	mov    eax,ecx
    1326:	8d 88 e8 03 00 00    	lea    ecx,[eax+0x3e8]
    132c:	ba d3 4d 62 10       	mov    edx,0x10624dd3
    1331:	89 c8                	mov    eax,ecx
    1333:	f7 ea                	imul   edx
    1335:	c1 fa 06             	sar    edx,0x6
    1338:	89 c8                	mov    eax,ecx
    133a:	c1 f8 1f             	sar    eax,0x1f
    133d:	29 c2                	sub    edx,eax
    133f:	89 d0                	mov    eax,edx
    1341:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1344:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1347:	69 c0 e8 03 00 00    	imul   eax,eax,0x3e8
    134d:	29 c1                	sub    ecx,eax
    134f:	89 c8                	mov    eax,ecx
    1351:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1354:	e9 0d 01 00 00       	jmp    1466 <.L3+0x1e>

00001359 <.L12>: 
    1359:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    135c:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    135f:	01 d0                	add    eax,edx
    1361:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1364:	8d 48 0a             	lea    ecx,[eax+0xa]
    1367:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    136a:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    136d:	01 d0                	add    eax,edx
    136f:	89 ca                	mov    edx,ecx
    1371:	88 10                	mov    BYTE PTR [eax],dl
    1373:	e9 ee 00 00 00       	jmp    1466 <.L3+0x1e>

00001378 <.L6>:
    1378:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    137b:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    137e:	01 d0                	add    eax,edx
    1380:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1383:	8d 48 fb             	lea    ecx,[eax-0x5]
    1386:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1389:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    138c:	01 d0                	add    eax,edx
    138e:	89 ca                	mov    edx,ecx
    1390:	88 10                	mov    BYTE PTR [eax],dl
    1392:	e9 cf 00 00 00       	jmp    1466 <.L3+0x1e>

00001397 <.L11>: start
    1397:	83 7d f4 ff          	cmp    DWORD PTR [ebp-0xc],0xffffffff
    139b:	0f 85 fe 00 00 00    	jne    149f <.L3+0x57>
    13a1:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    13a4:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    13a7:	e9 ba 00 00 00       	jmp    1466 <.L3+0x1e>

000013ac <.L4>: end
    13ac:	83 7d f4 ff          	cmp    DWORD PTR [ebp-0xc],0xffffffff
    13b0:	0f 84 ec 00 00 00    	je     14a2 <.L3+0x5a>
    13b6:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    13b9:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    13bc:	01 d0                	add    eax,edx
    13be:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    13c1:	84 c0                	test   al,al
    13c3:	75 0c                	jne    13d1 <.L4+0x25>
    13c5:	c7 45 f4 ff ff ff ff 	mov    DWORD PTR [ebp-0xc],0xffffffff
    13cc:	e9 95 00 00 00       	jmp    1466 <.L3+0x1e>
    13d1:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    13d4:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    13d7:	e9 8a 00 00 00       	jmp    1466 <.L3+0x1e>

000013dc <.L10>: Read
    13dc:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
    13e0:	0f 85 bf 00 00 00    	jne    14a5 <.L3+0x5d>
    13e6:	8b 55 e8             	mov    edx,DWORD PTR [ebp-0x18]
    13e9:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    13ec:	01 d0                	add    eax,edx
    13ee:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    13f1:	84 c0                	test   al,al
    13f3:	75 07                	jne    13fc <.L10+0x20>
    13f5:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
    13fc:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    13ff:	8d 50 01             	lea    edx,[eax+0x1]
    1402:	89 55 e8             	mov    DWORD PTR [ebp-0x18],edx
    1405:	89 c2                	mov    edx,eax
    1407:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    140a:	01 d0                	add    eax,edx
    140c:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
    140f:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
    1412:	01 ca                	add    edx,ecx
    1414:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1417:	88 02                	mov    BYTE PTR [edx],al
    1419:	eb 4b                	jmp    1466 <.L3+0x1e>

0000141b <.L8>: Out
    141b:	81 7d e4 e7 03 00 00 	cmp    DWORD PTR [ebp-0x1c],0x3e7
    1422:	0f 84 80 00 00 00    	je     14a8 <.L3+0x60>
    1428:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    142b:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    142e:	8d 0c 02             	lea    ecx,[edx+eax*1]
    1431:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1434:	8d 50 01             	lea    edx,[eax+0x1]
    1437:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
    143a:	89 c2                	mov    edx,eax
    143c:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    143f:	01 c2                	add    edx,eax
    1441:	0f b6 01             	movzx  eax,BYTE PTR [ecx]
    1444:	88 02                	mov    BYTE PTR [edx],al
    1446:	eb 1e                	jmp    1466 <.L3+0x1e>

00001448 <.L3>:
    1448:	e8 63 fc ff ff       	call   10b0 <__ctype_b_loc@plt>
    144d:	8b 00                	mov    eax,DWORD PTR [eax]
    144f:	0f be 55 d3          	movsx  edx,BYTE PTR [ebp-0x2d]
    1453:	01 d2                	add    edx,edx
    1455:	01 d0                	add    eax,edx
    1457:	0f b7 00             	movzx  eax,WORD PTR [eax]
    145a:	0f b7 c0             	movzx  eax,ax
    145d:	25 00 20 00 00       	and    eax,0x2000
    1462:	85 c0                	test   eax,eax
    1464:	74 45                	je     14ab <.L3+0x63>
    1466:	83 45 dc 01          	add    DWORD PTR [ebp-0x24],0x1
    146a:	81 7d dc 3f 42 0f 00 	cmp    DWORD PTR [ebp-0x24],0xf423f
    1471:	7f 3b                	jg     14ae <.L3+0x66>
    1473:	83 45 ec 01          	add    DWORD PTR [ebp-0x14],0x1
    1477:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
    147a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    147d:	01 d0                	add    eax,edx
    147f:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1482:	88 45 d3             	mov    BYTE PTR [ebp-0x2d],al
    1485:	80 7d d3 00          	cmp    BYTE PTR [ebp-0x2d],0x0
    1489:	0f 85 fc fd ff ff    	jne    128b <run+0x72>
    148f:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
    1492:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    1495:	01 d0                	add    eax,edx
    1497:	c6 00 00             	mov    BYTE PTR [eax],0x0
    149a:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    149d:	eb 31                	jmp    14d0 <.L3+0x88>
    149f:	90                   	nop
    14a0:	eb 0d                	jmp    14af <.L3+0x67>
    14a2:	90                   	nop
    14a3:	eb 0a                	jmp    14af <.L3+0x67>
    14a5:	90                   	nop
    14a6:	eb 07                	jmp    14af <.L3+0x67>
    14a8:	90                   	nop
    14a9:	eb 04                	jmp    14af <.L3+0x67>
    14ab:	90                   	nop
    14ac:	eb 01                	jmp    14af <.L3+0x67>
    14ae:	90                   	nop
    14af:	83 ec 0c             	sub    esp,0xc
    14b2:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
    14b5:	e8 96 fb ff ff       	call   1050 <free@plt>
    14ba:	83 c4 10             	add    esp,0x10
    14bd:	83 ec 0c             	sub    esp,0xc
    14c0:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
    14c3:	e8 88 fb ff ff       	call   1050 <free@plt>
    14c8:	83 c4 10             	add    esp,0x10
    14cb:	b8 00 00 00 00       	mov    eax,0x0
    14d0:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    14d3:	c9                   	leave  
    14d4:	c3                   	ret    

000014d5 <transform>:
    14d5:	55                   	push   ebp
    14d6:	89 e5                	mov    ebp,esp
    14d8:	53                   	push   ebx
    14d9:	83 ec 14             	sub    esp,0x14
    14dc:	e8 3f fc ff ff       	call   1120 <__x86.get_pc_thunk.bx>
    14e1:	81 c3 1f 2b 00 00    	add    ebx,0x2b1f
    14e7:	83 ec 0c             	sub    esp,0xc
    14ea:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    14ed:	e8 7e fb ff ff       	call   1070 <strlen@plt>
    14f2:	83 c4 10             	add    esp,0x10
    14f5:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    14f8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    14fb:	83 c0 01             	add    eax,0x1
    14fe:	83 ec 0c             	sub    esp,0xc
    1501:	50                   	push   eax
    1502:	e8 59 fb ff ff       	call   1060 <malloc@plt>
    1507:	83 c4 10             	add    esp,0x10
    150a:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    150d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1510:	83 e8 01             	sub    eax,0x1
    1513:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1516:	eb 21                	jmp    1539 <transform+0x64>
    1518:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    151b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    151e:	01 d0                	add    eax,edx
    1520:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1523:	83 ea 01             	sub    edx,0x1
    1526:	2b 55 f4             	sub    edx,DWORD PTR [ebp-0xc]
    1529:	89 d1                	mov    ecx,edx
    152b:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
    152e:	01 ca                	add    edx,ecx
    1530:	0f b6 00             	movzx  eax,BYTE PTR [eax]
    1533:	88 02                	mov    BYTE PTR [edx],al
    1535:	83 6d f4 01          	sub    DWORD PTR [ebp-0xc],0x1
    1539:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
    153d:	79 d9                	jns    1518 <transform+0x43>
    153f:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1542:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1545:	01 d0                	add    eax,edx
    1547:	c6 00 00             	mov    BYTE PTR [eax],0x0
    154a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    154d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1550:	c9                   	leave  
    1551:	c3                   	ret    

00001552 <main>:
    1552:	8d 4c 24 04          	lea    ecx,[esp+0x4]
    1556:	83 e4 f0             	and    esp,0xfffffff0
    1559:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
    155c:	55                   	push   ebp
    155d:	89 e5                	mov    ebp,esp
    155f:	53                   	push   ebx
    1560:	51                   	push   ecx
    1561:	83 ec 20             	sub    esp,0x20
    1564:	e8 b7 fb ff ff       	call   1120 <__x86.get_pc_thunk.bx>
    1569:	81 c3 97 2a 00 00    	add    ebx,0x2a97
    156f:	89 c8                	mov    eax,ecx
    1571:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
    1574:	83 c0 04             	add    eax,0x4
    1577:	8b 00                	mov    eax,DWORD PTR [eax]
    1579:	83 ec 08             	sub    esp,0x8
    157c:	8d 93 98 e1 ff ff    	lea    edx,[ebx-0x1e68]
    1582:	52                   	push   edx
    1583:	50                   	push   eax
    1584:	e8 07 fb ff ff       	call   1090 <fopen@plt>
    1589:	83 c4 10             	add    esp,0x10
    158c:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    158f:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
    1593:	75 1c                	jne    15b1 <main+0x5f>
    1595:	83 ec 0c             	sub    esp,0xc
    1598:	8d 83 9a e1 ff ff    	lea    eax,[ebx-0x1e66]
    159e:	50                   	push   eax
    159f:	e8 9c fa ff ff       	call   1040 <printf@plt>
    15a4:	83 c4 10             	add    esp,0x10
    15a7:	b8 01 00 00 00       	mov    eax,0x1
    15ac:	e9 08 01 00 00       	jmp    16b9 <main+0x167>
    15b1:	83 ec 0c             	sub    esp,0xc
    15b4:	68 e8 03 00 00       	push   0x3e8
    15b9:	e8 a2 fa ff ff       	call   1060 <malloc@plt>
    15be:	83 c4 10             	add    esp,0x10
    15c1:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    15c4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    15cb:	eb 37                	jmp    1604 <main+0xb2>
    15cd:	81 7d f4 e8 03 00 00 	cmp    DWORD PTR [ebp-0xc],0x3e8
    15d4:	7e 1c                	jle    15f2 <main+0xa0>
    15d6:	83 ec 0c             	sub    esp,0xc
    15d9:	8d 83 9a e1 ff ff    	lea    eax,[ebx-0x1e66]
    15df:	50                   	push   eax
    15e0:	e8 5b fa ff ff       	call   1040 <printf@plt>
    15e5:	83 c4 10             	add    esp,0x10
    15e8:	b8 01 00 00 00       	mov    eax,0x1
    15ed:	e9 c7 00 00 00       	jmp    16b9 <main+0x167>
    15f2:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    15f5:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    15f8:	01 c2                	add    edx,eax
    15fa:	0f b6 45 eb          	movzx  eax,BYTE PTR [ebp-0x15]
    15fe:	88 02                	mov    BYTE PTR [edx],al
    1600:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    1604:	83 ec 0c             	sub    esp,0xc
    1607:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
    160a:	e8 91 fa ff ff       	call   10a0 <fgetc@plt>
    160f:	83 c4 10             	add    esp,0x10
    1612:	88 45 eb             	mov    BYTE PTR [ebp-0x15],al
    1615:	80 7d eb ff          	cmp    BYTE PTR [ebp-0x15],0xff
    1619:	75 b2                	jne    15cd <main+0x7b>
    161b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    161e:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1621:	01 d0                	add    eax,edx
    1623:	c6 00 00             	mov    BYTE PTR [eax],0x0
    1626:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    162d:	eb 6d                	jmp    169c <main+0x14a>
    162f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1632:	8b 84 83 3c 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0x3c]
    1639:	83 ec 0c             	sub    esp,0xc
    163c:	50                   	push   eax
    163d:	e8 93 fe ff ff       	call   14d5 <transform>
    1642:	83 c4 10             	add    esp,0x10
    1645:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    1648:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    164b:	8b 84 83 3c 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0x3c]
    1652:	83 ec 08             	sub    esp,0x8
    1655:	50                   	push   eax
    1656:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
    1659:	e8 bb fb ff ff       	call   1219 <run>
    165e:	83 c4 10             	add    esp,0x10
    1661:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
    1664:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
    1668:	74 15                	je     167f <main+0x12d>
    166a:	83 ec 08             	sub    esp,0x8
    166d:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
    1670:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
    1673:	e8 b8 f9 ff ff       	call   1030 <strcmp@plt>
    1678:	83 c4 10             	add    esp,0x10
    167b:	85 c0                	test   eax,eax
    167d:	74 19                	je     1698 <main+0x146>
    167f:	83 ec 0c             	sub    esp,0xc
    1682:	8d 83 9a e1 ff ff    	lea    eax,[ebx-0x1e66]
    1688:	50                   	push   eax
    1689:	e8 b2 f9 ff ff       	call   1040 <printf@plt>
    168e:	83 c4 10             	add    esp,0x10
    1691:	b8 01 00 00 00       	mov    eax,0x1
    1696:	eb 21                	jmp    16b9 <main+0x167>
    1698:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    169c:	83 7d f4 04          	cmp    DWORD PTR [ebp-0xc],0x4
    16a0:	7e 8d                	jle    162f <main+0xdd>
    16a2:	83 ec 0c             	sub    esp,0xc
    16a5:	8d 83 a2 e1 ff ff    	lea    eax,[ebx-0x1e5e]
    16ab:	50                   	push   eax
    16ac:	e8 8f f9 ff ff       	call   1040 <printf@plt>
    16b1:	83 c4 10             	add    esp,0x10
    16b4:	b8 00 00 00 00       	mov    eax,0x0
    16b9:	8d 65 f8             	lea    esp,[ebp-0x8]
    16bc:	59                   	pop    ecx
    16bd:	5b                   	pop    ebx
    16be:	5d                   	pop    ebp
    16bf:	8d 61 fc             	lea    esp,[ecx-0x4]
    16c2:	c3                   	ret    
    16c3:	66 90                	xchg   ax,ax
    16c5:	66 90                	xchg   ax,ax
    16c7:	66 90                	xchg   ax,ax
    16c9:	66 90                	xchg   ax,ax
    16cb:	66 90                	xchg   ax,ax
    16cd:	66 90                	xchg   ax,ax
    16cf:	90                   	nop

000016d0 <__libc_csu_init>:
    16d0:	55                   	push   ebp
    16d1:	57                   	push   edi
    16d2:	56                   	push   esi
    16d3:	53                   	push   ebx
    16d4:	e8 47 fa ff ff       	call   1120 <__x86.get_pc_thunk.bx>
    16d9:	81 c3 27 29 00 00    	add    ebx,0x2927
    16df:	83 ec 0c             	sub    esp,0xc
    16e2:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
    16e6:	e8 15 f9 ff ff       	call   1000 <_init>
    16eb:	8d b3 f8 fe ff ff    	lea    esi,[ebx-0x108]
    16f1:	8d 83 f4 fe ff ff    	lea    eax,[ebx-0x10c]
    16f7:	29 c6                	sub    esi,eax
    16f9:	c1 fe 02             	sar    esi,0x2
    16fc:	74 1f                	je     171d <__libc_csu_init+0x4d>
    16fe:	31 ff                	xor    edi,edi
    1700:	83 ec 04             	sub    esp,0x4
    1703:	55                   	push   ebp
    1704:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    1708:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    170c:	ff 94 bb f4 fe ff ff 	call   DWORD PTR [ebx+edi*4-0x10c]
    1713:	83 c7 01             	add    edi,0x1
    1716:	83 c4 10             	add    esp,0x10
    1719:	39 fe                	cmp    esi,edi
    171b:	75 e3                	jne    1700 <__libc_csu_init+0x30>
    171d:	83 c4 0c             	add    esp,0xc
    1720:	5b                   	pop    ebx
    1721:	5e                   	pop    esi
    1722:	5f                   	pop    edi
    1723:	5d                   	pop    ebp
    1724:	c3                   	ret    
    1725:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    172c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00001730 <__libc_csu_fini>:
    1730:	c3                   	ret    

Disassembly of section .fini:

00001734 <_fini>:
    1734:	53                   	push   ebx
    1735:	83 ec 08             	sub    esp,0x8
    1738:	e8 e3 f9 ff ff       	call   1120 <__x86.get_pc_thunk.bx>
    173d:	81 c3 c3 28 00 00    	add    ebx,0x28c3
    1743:	83 c4 08             	add    esp,0x8
    1746:	5b                   	pop    ebx
    1747:	c3                   	ret    

Disassembly of section .rodata:

00002000 <_fp_hw>:
    2000:	03 00                	add    eax,DWORD PTR [eax]
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    DWORD PTR [eax],eax
    2006:	02 00                	add    al,BYTE PTR [eax]
    2008:	63 6c 65 72          	arpl   WORD PTR [ebp+eiz*2+0x72],bp
    200c:	69 63 61 6c 20 61 63 	imul   esp,DWORD PTR [ebx+0x61],0x6361206c
    2013:	63 75 72             	arpl   WORD PTR [ebp+0x72],si
    2016:	61                   	popa   
    2017:	63 79 20             	arpl   WORD PTR [ecx+0x20],di
    201a:	73 63                	jae    207f <_IO_stdin_used+0x7b>
    201c:	72 61                	jb     207f <_IO_stdin_used+0x7b>
    201e:	6d                   	ins    DWORD PTR es:[edi],dx
    201f:	62 6c 65 72          	bound  ebp,QWORD PTR [ebp+eiz*2+0x72]
    2023:	20 6f 75             	and    BYTE PTR [edi+0x75],ch
    2026:	74 73                	je     209b <_IO_stdin_used+0x97>
    2028:	70 6f                	jo     2099 <_IO_stdin_used+0x95>
    202a:	6b 65 6e 20          	imul   esp,DWORD PTR [ebp+0x6e],0x20
    202e:	64 75 63             	fs jne 2094 <_IO_stdin_used+0x90>
    2031:	74 00                	je     2033 <_IO_stdin_used+0x2f>
    2033:	00 62 75             	add    BYTE PTR [edx+0x75],ah
    2036:	67 67 79 20          	addr16 addr16 jns 205a <_IO_stdin_used+0x56>
    203a:	75 6e                	jne    20aa <_IO_stdin_used+0xa6>
    203c:	66 61                	popaw  
    203e:	69 6c 69 6e 67 20 70 	imul   ebp,DWORD PTR [ecx+ebp*2+0x6e],0x65702067
    2045:	65 
    2046:	74 72                	je     20ba <_IO_stdin_used+0xb6>
    2048:	6f                   	outs   dx,DWORD PTR ds:[esi]
    2049:	6c                   	ins    BYTE PTR es:[edi],dx
    204a:	65 75 6d             	gs jne 20ba <_IO_stdin_used+0xb6>
    204d:	20 65 6d             	and    BYTE PTR [ebp+0x6d],ah
    2050:	70 65                	jo     20b7 <_IO_stdin_used+0xb3>
    2052:	72 6f                	jb     20c3 <_IO_stdin_used+0xbf>
    2054:	72 20                	jb     2076 <_IO_stdin_used+0x72>
    2056:	74 61                	je     20b9 <_IO_stdin_used+0xb5>
    2058:	62 62 79             	bound  esp,QWORD PTR [edx+0x79]
    205b:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
    205e:	6f                   	outs   dx,DWORD PTR ds:[esi]
    205f:	75 74                	jne    20d5 <_IO_stdin_used+0xd1>
    2061:	20 6c 69 74          	and    BYTE PTR [ecx+ebp*2+0x74],ch
    2065:	69 67 61 74 6f 72 20 	imul   esp,DWORD PTR [edi+0x61],0x20726f74
    206c:	63 6f 72             	arpl   WORD PTR [edi+0x72],bp
    206f:	61                   	popa   
    2070:	6c                   	ins    BYTE PTR es:[edi],dx
    2071:	20 63 68             	and    BYTE PTR [ebx+0x68],ah
    2074:	65 64 64 61          	gs fs fs popa 
    2078:	72 20                	jb     209a <_IO_stdin_used+0x96>
    207a:	70 61                	jo     20dd <_IO_stdin_used+0xd9>
    207c:	72 6b                	jb     20e9 <_IO_stdin_used+0xe5>
    207e:	61                   	popa   
    207f:	00 64 6f 6d          	add    BYTE PTR [edi+ebp*2+0x6d],ah
    2083:	61                   	popa   
    2084:	69 6e 20 72 65 63 69 	imul   ebp,DWORD PTR [esi+0x20],0x69636572
    208b:	74 65                	je     20f2 <_IO_stdin_used+0xee>
    208d:	20 70 75             	and    BYTE PTR [eax+0x75],dh
    2090:	73 68                	jae    20fa <_IO_stdin_used+0xf6>
    2092:	6f                   	outs   dx,DWORD PTR ds:[esi]
    2093:	76 65                	jbe    20fa <_IO_stdin_used+0xf6>
    2095:	72 20                	jb     20b7 <_IO_stdin_used+0xb3>
    2097:	65 64 67 65 20 65 63 	gs fs and BYTE PTR gs:[di+0x63],ah
    209e:	6f                   	outs   dx,DWORD PTR ds:[esi]
    209f:	6c                   	ins    BYTE PTR es:[edi],dx
    20a0:	6f                   	outs   dx,DWORD PTR ds:[esi]
    20a1:	67 79 00             	addr16 jns 20a4 <_IO_stdin_used+0xa0>
    20a4:	62 61 63             	bound  esp,QWORD PTR [ecx+0x63]
    20a7:	6b 6c 61 73 68       	imul   ebp,DWORD PTR [ecx+eiz*2+0x73],0x68
    20ac:	20 74 61 70          	and    BYTE PTR [ecx+eiz*2+0x70],dh
    20b0:	69 6f 63 61 20 73 6d 	imul   ebp,DWORD PTR [edi+0x63],0x6d732061
    20b7:	61                   	popa   
    20b8:	6c                   	ins    BYTE PTR es:[edi],dx
    20b9:	6c                   	ins    BYTE PTR es:[edi],dx
    20ba:	20 63 6f             	and    BYTE PTR [ebx+0x6f],ah
    20bd:	6e                   	outs   dx,BYTE PTR ds:[esi]
    20be:	6a 6f                	push   0x6f
    20c0:	69 6e 65 64 20 62 6c 	imul   ebp,DWORD PTR [esi+0x65],0x6c622064
    20c7:	75 72                	jne    213b <_IO_stdin_used+0x137>
    20c9:	74 00                	je     20cb <_IO_stdin_used+0xc7>
    20cb:	00 59 d3             	add    BYTE PTR [ecx-0x2d],bl
    20ce:	ff                   	(bad)  
    20cf:	ff 97 d3 ff ff dc    	call   DWORD PTR [edi-0x2300002d]
    20d5:	d3 ff                	sar    edi,cl
    20d7:	ff a9 d2 ff ff 48    	jmp    FWORD PTR [ecx+0x48ffffd2]
    20dd:	d4 ff                	aam    0xff
    20df:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20e2:	ff                   	(bad)  
    20e3:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20e6:	ff                   	(bad)  
    20e7:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20ea:	ff                   	(bad)  
    20eb:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20ee:	ff                   	(bad)  
    20ef:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20f2:	ff                   	(bad)  
    20f3:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20f6:	ff                   	(bad)  
    20f7:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20fa:	ff                   	(bad)  
    20fb:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    20fe:	ff                   	(bad)  
    20ff:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2102:	ff                   	(bad)  
    2103:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2106:	ff                   	(bad)  
    2107:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    210a:	ff                   	(bad)  
    210b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    210e:	ff                   	(bad)  
    210f:	ff 1b                	call   FWORD PTR [ebx]
    2111:	d4 ff                	aam    0xff
    2113:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2116:	ff                   	(bad)  
    2117:	ff 01                	inc    DWORD PTR [ecx]
    2119:	d3 ff                	sar    edi,cl
    211b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    211e:	ff                   	(bad)  
    211f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2122:	ff                   	(bad)  
    2123:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2126:	ff                   	(bad)  
    2127:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    212a:	ff                   	(bad)  
    212b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    212e:	ff                   	(bad)  
    212f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2132:	ff                   	(bad)  
    2133:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2136:	ff                   	(bad)  
    2137:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    213a:	ff                   	(bad)  
    213b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    213e:	ff                   	(bad)  
    213f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2142:	ff                   	(bad)  
    2143:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2146:	ff                   	(bad)  
    2147:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    214a:	ff                   	(bad)  
    214b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    214e:	ff                   	(bad)  
    214f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2152:	ff                   	(bad)  
    2153:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2156:	ff                   	(bad)  
    2157:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    215a:	ff                   	(bad)  
    215b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    215e:	ff                   	(bad)  
    215f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2162:	ff                   	(bad)  
    2163:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2166:	ff                   	(bad)  
    2167:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    216a:	ff                   	(bad)  
    216b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    216e:	ff                   	(bad)  
    216f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2172:	ff                   	(bad)  
    2173:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2176:	ff                   	(bad)  
    2177:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    217a:	ff                   	(bad)  
    217b:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    217e:	ff                   	(bad)  
    217f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2182:	ff                   	(bad)  
    2183:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2186:	ff                   	(bad)  
    2187:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    218a:	ff                   	(bad)  
    218b:	ff                   	(bad)  
    218c:	78 d3                	js     2161 <_IO_stdin_used+0x15d>
    218e:	ff                   	(bad)  
    218f:	ff 48 d4             	dec    DWORD PTR [eax-0x2c]
    2192:	ff                   	(bad)  
    2193:	ff ac d3 ff ff 72 00 	jmp    FWORD PTR [ebx+edx*8+0x72ffff]
    219a:	45                   	inc    ebp
    219b:	58                   	pop    eax
    219c:	50                   	push   eax
    219d:	4c                   	dec    esp
    219e:	4f                   	dec    edi
    219f:	44                   	inc    esp
    21a0:	45                   	inc    ebp
    21a1:	00 53 55             	add    BYTE PTR [ebx+0x55],dl
    21a4:	43                   	inc    ebx
    21a5:	43                   	inc    ebx
    21a6:	45                   	inc    ebp
    21a7:	53                   	push   ebx
    21a8:	53                   	push   ebx
	...

Disassembly of section .eh_frame_hdr:

000021ac <__GNU_EH_FRAME_HDR>:
    21ac:	01 1b                	add    DWORD PTR [ebx],ebx
    21ae:	03 3b                	add    edi,DWORD PTR [ebx]
    21b0:	48                   	dec    eax
    21b1:	00 00                	add    BYTE PTR [eax],al
    21b3:	00 08                	add    BYTE PTR [eax],cl
    21b5:	00 00                	add    BYTE PTR [eax],al
    21b7:	00 74 ee ff          	add    BYTE PTR [esi+ebp*8-0x1],dh
    21bb:	ff 90 00 00 00 24    	call   DWORD PTR [eax+0x24000000]
    21c1:	ef                   	out    dx,eax
    21c2:	ff                   	(bad)  
    21c3:	ff b4 00 00 00 34 ef 	push   DWORD PTR [eax+eax*1-0x10cc0000]
    21ca:	ff                   	(bad)  
    21cb:	ff 64 00 00          	jmp    DWORD PTR [eax+eax*1+0x0]
    21cf:	00 6d f0             	add    BYTE PTR [ebp-0x10],ch
    21d2:	ff                   	(bad)  
    21d3:	ff c8                	dec    eax
    21d5:	00 00                	add    BYTE PTR [eax],al
    21d7:	00 29                	add    BYTE PTR [ecx],ch
    21d9:	f3 ff                	repz (bad) 
    21db:	ff                   	(bad)  
    21dc:	ec                   	in     al,dx
    21dd:	00 00                	add    BYTE PTR [eax],al
    21df:	00 a6 f3 ff ff 10    	add    BYTE PTR [esi+0x10fffff3],ah
    21e5:	01 00                	add    DWORD PTR [eax],eax
    21e7:	00 24 f5 ff ff 48 01 	add    BYTE PTR [esi*8+0x148ffff],ah
    21ee:	00 00                	add    BYTE PTR [eax],al
    21f0:	84 f5                	test   ch,dh
    21f2:	ff                   	(bad)  
    21f3:	ff                   	.byte 0xff
    21f4:	94                   	xchg   esp,eax
    21f5:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .eh_frame:

000021f8 <__FRAME_END__-0x15c>:
    21f8:	14 00                	adc    al,0x0
    21fa:	00 00                	add    BYTE PTR [eax],al
    21fc:	00 00                	add    BYTE PTR [eax],al
    21fe:	00 00                	add    BYTE PTR [eax],al
    2200:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    2203:	00 01                	add    BYTE PTR [ecx],al
    2205:	7c 08                	jl     220f <__GNU_EH_FRAME_HDR+0x63>
    2207:	01 1b                	add    DWORD PTR [ebx],ebx
    2209:	0c 04                	or     al,0x4
    220b:	04 88                	add    al,0x88
    220d:	01 07                	add    DWORD PTR [edi],eax
    220f:	08 10                	or     BYTE PTR [eax],dl
    2211:	00 00                	add    BYTE PTR [eax],al
    2213:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    2216:	00 00                	add    BYTE PTR [eax],al
    2218:	c8 ee ff ff          	enter  0xffee,0xff
    221c:	36 00 00             	add    BYTE PTR ss:[eax],al
    221f:	00 00                	add    BYTE PTR [eax],al
    2221:	00 00                	add    BYTE PTR [eax],al
    2223:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
    2226:	00 00                	add    BYTE PTR [eax],al
    2228:	00 00                	add    BYTE PTR [eax],al
    222a:	00 00                	add    BYTE PTR [eax],al
    222c:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    222f:	00 01                	add    BYTE PTR [ecx],al
    2231:	7c 08                	jl     223b <__GNU_EH_FRAME_HDR+0x8f>
    2233:	01 1b                	add    DWORD PTR [ebx],ebx
    2235:	0c 04                	or     al,0x4
    2237:	04 88                	add    al,0x88
    2239:	01 00                	add    DWORD PTR [eax],eax
    223b:	00 20                	add    BYTE PTR [eax],ah
    223d:	00 00                	add    BYTE PTR [eax],al
    223f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    2242:	00 00                	add    BYTE PTR [eax],al
    2244:	dc ed                	fsubr  st(5),st
    2246:	ff                   	(bad)  
    2247:	ff b0 00 00 00 00    	push   DWORD PTR [eax+0x0]
    224d:	0e                   	push   cs
    224e:	08 46 0e             	or     BYTE PTR [esi+0xe],al
    2251:	0c 4a                	or     al,0x4a
    2253:	0f 0b                	ud2    
    2255:	74 04                	je     225b <__GNU_EH_FRAME_HDR+0xaf>
    2257:	78 00                	js     2259 <__GNU_EH_FRAME_HDR+0xad>
    2259:	3f                   	aas    
    225a:	1a 3b                	sbb    bh,BYTE PTR [ebx]
    225c:	2a 32                	sub    dh,BYTE PTR [edx]
    225e:	24 22                	and    al,0x22
    2260:	10 00                	adc    BYTE PTR [eax],al
    2262:	00 00                	add    BYTE PTR [eax],al
    2264:	40                   	inc    eax
    2265:	00 00                	add    BYTE PTR [eax],al
    2267:	00 68 ee             	add    BYTE PTR [eax-0x12],ch
    226a:	ff                   	(bad)  
    226b:	ff 08                	dec    DWORD PTR [eax]
    226d:	00 00                	add    BYTE PTR [eax],al
    226f:	00 00                	add    BYTE PTR [eax],al
    2271:	00 00                	add    BYTE PTR [eax],al
    2273:	00 20                	add    BYTE PTR [eax],ah
    2275:	00 00                	add    BYTE PTR [eax],al
    2277:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
    227b:	00 9d ef ff ff bc    	add    BYTE PTR [ebp-0x43000011],bl
    2281:	02 00                	add    al,BYTE PTR [eax]
    2283:	00 00                	add    BYTE PTR [eax],al
    2285:	41                   	inc    ecx
    2286:	0e                   	push   cs
    2287:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    228d:	44                   	inc    esp
    228e:	83 03 03             	add    DWORD PTR [ebx],0x3
    2291:	b4 02                	mov    ah,0x2
    2293:	c5 c3 0c             	(bad)  
    2296:	04 04                	add    al,0x4
    2298:	20 00                	and    BYTE PTR [eax],al
    229a:	00 00                	add    BYTE PTR [eax],al
    229c:	78 00                	js     229e <__GNU_EH_FRAME_HDR+0xf2>
    229e:	00 00                	add    BYTE PTR [eax],al
    22a0:	35 f2 ff ff 7d       	xor    eax,0x7dfffff2
    22a5:	00 00                	add    BYTE PTR [eax],al
    22a7:	00 00                	add    BYTE PTR [eax],al
    22a9:	41                   	inc    ecx
    22aa:	0e                   	push   cs
    22ab:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    22b1:	44                   	inc    esp
    22b2:	83 03 02             	add    DWORD PTR [ebx],0x2
    22b5:	75 c5                	jne    227c <__GNU_EH_FRAME_HDR+0xd0>
    22b7:	c3                   	ret    
    22b8:	0c 04                	or     al,0x4
    22ba:	04 00                	add    al,0x0
    22bc:	34 00                	xor    al,0x0
    22be:	00 00                	add    BYTE PTR [eax],al
    22c0:	9c                   	pushf  
    22c1:	00 00                	add    BYTE PTR [eax],al
    22c3:	00 8e f2 ff ff 71    	add    BYTE PTR [esi+0x71fffff2],cl
    22c9:	01 00                	add    DWORD PTR [eax],eax
    22cb:	00 00                	add    BYTE PTR [eax],al
    22cd:	44                   	inc    esp
    22ce:	0c 01                	or     al,0x1
    22d0:	00 47 10             	add    BYTE PTR [edi+0x10],al
    22d3:	05 02 75 00 44       	add    eax,0x44007502
    22d8:	0f 03 75 78          	lsl    esi,WORD PTR [ebp+0x78]
    22dc:	06                   	push   es
    22dd:	10 03                	adc    BYTE PTR [ebx],al
    22df:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
    22e2:	03 5c 01 c1          	add    ebx,DWORD PTR [ecx+eax*1-0x3f]
    22e6:	0c 01                	or     al,0x1
    22e8:	00 41 c3             	add    BYTE PTR [ecx-0x3d],al
    22eb:	41                   	inc    ecx
    22ec:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
    22ef:	04 04                	add    al,0x4
    22f1:	00 00                	add    BYTE PTR [eax],al
    22f3:	00 48 00             	add    BYTE PTR [eax+0x0],cl
    22f6:	00 00                	add    BYTE PTR [eax],al
    22f8:	d4 00                	aam    0x0
    22fa:	00 00                	add    BYTE PTR [eax],al
    22fc:	d4 f3                	aam    0xf3
    22fe:	ff                   	(bad)  
    22ff:	ff 55 00             	call   DWORD PTR [ebp+0x0]
    2302:	00 00                	add    BYTE PTR [eax],al
    2304:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    2307:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
    230d:	87 03                	xchg   DWORD PTR [ebx],eax
    230f:	41                   	inc    ecx
    2310:	0e                   	push   cs
    2311:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
    2317:	83 05 4e 0e 20 61 0e 	add    DWORD PTR ds:0x61200e4e,0xe
    231e:	24 41                	and    al,0x41
    2320:	0e                   	push   cs
    2321:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
    2325:	44                   	inc    esp
    2326:	0e                   	push   cs
    2327:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
    232a:	20 47 0e             	and    BYTE PTR [edi+0xe],al
    232d:	14 41                	adc    al,0x41
    232f:	c3                   	ret    
    2330:	0e                   	push   cs
    2331:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
    2334:	0e                   	push   cs
    2335:	0c 41                	or     al,0x41
    2337:	c7                   	(bad)  
    2338:	0e                   	push   cs
    2339:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
    233c:	0e                   	push   cs
    233d:	04 00                	add    al,0x0
    233f:	00 10                	add    BYTE PTR [eax],dl
    2341:	00 00                	add    BYTE PTR [eax],al
    2343:	00 20                	add    BYTE PTR [eax],ah
    2345:	01 00                	add    DWORD PTR [eax],eax
    2347:	00 e8                	add    al,ch
    2349:	f3 ff                	repz (bad) 
    234b:	ff 01                	inc    DWORD PTR [ecx]
    234d:	00 00                	add    BYTE PTR [eax],al
    234f:	00 00                	add    BYTE PTR [eax],al
    2351:	00 00                	add    BYTE PTR [eax],al
	...

00002354 <__FRAME_END__>:
    2354:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

00003ef4 <__frame_dummy_init_array_entry>:
    3ef4:	10 12                	adc    BYTE PTR [edx],dl
	...

Disassembly of section .fini_array:

00003ef8 <__do_global_dtors_aux_fini_array_entry>:
    3ef8:	c0 11 00             	rcl    BYTE PTR [ecx],0x0
	...

Disassembly of section .dynamic:

00003efc <_DYNAMIC>:
    3efc:	01 00                	add    DWORD PTR [eax],eax
    3efe:	00 00                	add    BYTE PTR [eax],al
    3f00:	01 00                	add    DWORD PTR [eax],eax
    3f02:	00 00                	add    BYTE PTR [eax],al
    3f04:	0c 00                	or     al,0x0
    3f06:	00 00                	add    BYTE PTR [eax],al
    3f08:	00 10                	add    BYTE PTR [eax],dl
    3f0a:	00 00                	add    BYTE PTR [eax],al
    3f0c:	0d 00 00 00 34       	or     eax,0x34000000
    3f11:	17                   	pop    ss
    3f12:	00 00                	add    BYTE PTR [eax],al
    3f14:	19 00                	sbb    DWORD PTR [eax],eax
    3f16:	00 00                	add    BYTE PTR [eax],al
    3f18:	f4                   	hlt    
    3f19:	3e 00 00             	add    BYTE PTR ds:[eax],al
    3f1c:	1b 00                	sbb    eax,DWORD PTR [eax]
    3f1e:	00 00                	add    BYTE PTR [eax],al
    3f20:	04 00                	add    al,0x0
    3f22:	00 00                	add    BYTE PTR [eax],al
    3f24:	1a 00                	sbb    al,BYTE PTR [eax]
    3f26:	00 00                	add    BYTE PTR [eax],al
    3f28:	f8                   	clc    
    3f29:	3e 00 00             	add    BYTE PTR ds:[eax],al
    3f2c:	1c 00                	sbb    al,0x0
    3f2e:	00 00                	add    BYTE PTR [eax],al
    3f30:	04 00                	add    al,0x0
    3f32:	00 00                	add    BYTE PTR [eax],al
    3f34:	f5                   	cmc    
    3f35:	fe                   	(bad)  
    3f36:	ff 6f ec             	jmp    FWORD PTR [edi-0x14]
    3f39:	01 00                	add    DWORD PTR [eax],eax
    3f3b:	00 05 00 00 00 0c    	add    BYTE PTR ds:0xc000000,al
    3f41:	03 00                	add    eax,DWORD PTR [eax]
    3f43:	00 06                	add    BYTE PTR [esi],al
    3f45:	00 00                	add    BYTE PTR [eax],al
    3f47:	00 0c 02             	add    BYTE PTR [edx+eax*1],cl
    3f4a:	00 00                	add    BYTE PTR [eax],al
    3f4c:	0a 00                	or     al,BYTE PTR [eax]
    3f4e:	00 00                	add    BYTE PTR [eax],al
    3f50:	ec                   	in     al,dx
    3f51:	00 00                	add    BYTE PTR [eax],al
    3f53:	00 0b                	add    BYTE PTR [ebx],cl
    3f55:	00 00                	add    BYTE PTR [eax],al
    3f57:	00 10                	add    BYTE PTR [eax],dl
    3f59:	00 00                	add    BYTE PTR [eax],al
    3f5b:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
    3f61:	00 00                	add    BYTE PTR [eax],al
    3f63:	00 03                	add    BYTE PTR [ebx],al
    3f65:	00 00                	add    BYTE PTR [eax],al
    3f67:	00 00                	add    BYTE PTR [eax],al
    3f69:	40                   	inc    eax
    3f6a:	00 00                	add    BYTE PTR [eax],al
    3f6c:	02 00                	add    al,BYTE PTR [eax]
    3f6e:	00 00                	add    BYTE PTR [eax],al
    3f70:	50                   	push   eax
    3f71:	00 00                	add    BYTE PTR [eax],al
    3f73:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
    3f76:	00 00                	add    BYTE PTR [eax],al
    3f78:	11 00                	adc    DWORD PTR [eax],eax
    3f7a:	00 00                	add    BYTE PTR [eax],al
    3f7c:	17                   	pop    ss
    3f7d:	00 00                	add    BYTE PTR [eax],al
    3f7f:	00 d0                	add    al,dl
    3f81:	04 00                	add    al,0x0
    3f83:	00 11                	add    BYTE PTR [ecx],dl
    3f85:	00 00                	add    BYTE PTR [eax],al
    3f87:	00 68 04             	add    BYTE PTR [eax+0x4],ch
    3f8a:	00 00                	add    BYTE PTR [eax],al
    3f8c:	12 00                	adc    al,BYTE PTR [eax]
    3f8e:	00 00                	add    BYTE PTR [eax],al
    3f90:	68 00 00 00 13       	push   0x13000000
    3f95:	00 00                	add    BYTE PTR [eax],al
    3f97:	00 08                	add    BYTE PTR [eax],cl
    3f99:	00 00                	add    BYTE PTR [eax],al
    3f9b:	00 fb                	add    bl,bh
    3f9d:	ff                   	(bad)  
    3f9e:	ff 6f 00             	jmp    FWORD PTR [edi+0x0]
    3fa1:	00 00                	add    BYTE PTR [eax],al
    3fa3:	08 fe                	or     dh,bh
    3fa5:	ff                   	(bad)  
    3fa6:	ff 6f 18             	jmp    FWORD PTR [edi+0x18]
    3fa9:	04 00                	add    al,0x0
    3fab:	00 ff                	add    bh,bh
    3fad:	ff                   	(bad)  
    3fae:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    3fb1:	00 00                	add    BYTE PTR [eax],al
    3fb3:	00 f0                	add    al,dh
    3fb5:	ff                   	(bad)  
    3fb6:	ff 6f f8             	jmp    FWORD PTR [edi-0x8]
    3fb9:	03 00                	add    eax,DWORD PTR [eax]
    3fbb:	00 fa                	add    dl,bh
    3fbd:	ff                   	(bad)  
    3fbe:	ff 6f 09             	jmp    FWORD PTR [edi+0x9]
	...

Disassembly of section .got:

00003fec <.got>:
	...
    3ff8:	52                   	push   edx
    3ff9:	15 00 00 00 00       	adc    eax,0x0
	...

Disassembly of section .got.plt:

00004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	fc                   	cld    
    4001:	3e 00 00             	add    BYTE PTR ds:[eax],al
	...
    400c:	36 10 00             	adc    BYTE PTR ss:[eax],al
    400f:	00 46 10             	add    BYTE PTR [esi+0x10],al
    4012:	00 00                	add    BYTE PTR [eax],al
    4014:	56                   	push   esi
    4015:	10 00                	adc    BYTE PTR [eax],al
    4017:	00 66 10             	add    BYTE PTR [esi+0x10],ah
    401a:	00 00                	add    BYTE PTR [eax],al
    401c:	76 10                	jbe    402e <_GLOBAL_OFFSET_TABLE_+0x2e>
    401e:	00 00                	add    BYTE PTR [eax],al
    4020:	86 10                	xchg   BYTE PTR [eax],dl
    4022:	00 00                	add    BYTE PTR [eax],al
    4024:	96                   	xchg   esi,eax
    4025:	10 00                	adc    BYTE PTR [eax],al
    4027:	00 a6 10 00 00 b6    	add    BYTE PTR [esi-0x49fffff0],ah
    402d:	10 00                	adc    BYTE PTR [eax],al
    402f:	00 c6                	add    dh,al
    4031:	10 00                	adc    BYTE PTR [eax],al
	...

Disassembly of section .data:

00004034 <__data_start>:
    4034:	00 00                	add    BYTE PTR [eax],al
	...

00004038 <__dso_handle>:
    4038:	38 40 00             	cmp    BYTE PTR [eax+0x0],al
	...

0000403c <inputs>:
    403c:	08 20                	or     BYTE PTR [eax],ah
    403e:	00 00                	add    BYTE PTR [eax],al
    4040:	34 20                	xor    al,0x20
    4042:	00 00                	add    BYTE PTR [eax],al
    4044:	5c                   	pop    esp
    4045:	20 00                	and    BYTE PTR [eax],al
    4047:	00 80 20 00 00 a4    	add    BYTE PTR [eax-0x5bffffe0],al
    404d:	20 00                	and    BYTE PTR [eax],al
	...

Disassembly of section .bss:

00004050 <__bss_start>:
    4050:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 44 65 62          	sub    BYTE PTR [ebp+eiz*2+0x62],al
   9:	69 61 6e 20 38 2e 33 	imul   esp,DWORD PTR [ecx+0x6e],0x332e3820
  10:	2e 30 2d 36 29 20 38 	xor    BYTE PTR cs:0x38202936,ch
  17:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  1a:	30 00                	xor    BYTE PTR [eax],al
